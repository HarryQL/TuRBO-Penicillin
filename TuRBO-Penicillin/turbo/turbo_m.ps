%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: Enscript Output
%%For: 梁乔昊
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Wed Jan 22 15:31:06 2020
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 6
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 794 def
/d_page_h 547 def
/d_header_x 0 def
/d_header_y 511 def
/d_header_w 794 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 794 def
/d_footer_h 0 def
/d_output_w 794 def
/d_output_h 511 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (turbo_m.py) def
/fdir (.) def
/ftail (turbo_m.py) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (12/20/19) def
/modtimestr (05:42:16) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
30 498 M (1:) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 498 M
(###############################################################################) s
/F-gs-font 10 10 SF
30 487 M (2:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 487 M
(# Copyright \(c\) 2019 Uber Technologies, Inc.                                  #) s
/F-gs-font 10 10 SF
30 476 M (3:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 476 M
(#                                                                             #) s
/F-gs-font 10 10 SF
30 465 M (4:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 465 M
(# Licensed under the Uber Non-Commercial License \(the "License"\);             #) s
/F-gs-font 10 10 SF
30 454 M (5:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 454 M
(# you may not use this file except in compliance with the License.            #) s
/F-gs-font 10 10 SF
30 443 M (6:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 443 M
(# You may obtain a copy of the License at the root directory of this project. #) s
/F-gs-font 10 10 SF
30 432 M (7:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 432 M
(#                                                                             #) s
/F-gs-font 10 10 SF
30 421 M (8:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 421 M
(# See the License for the specific language governing permissions and         #) s
/F-gs-font 10 10 SF
30 410 M (9:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 410 M
(# limitations under the License.                                              #) s
/F-gs-font 10 10 SF
24 399 M (10:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
48 399 M
(###############################################################################) s
/F-gs-font 10 10 SF
24 388 M (11:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
24 377 M (12:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 377 M
(import) s
/F-gs-font 10 10 SF
0 setgray
84 377 M
( math) s
24 366 M (13:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 366 M
(import) s
/F-gs-font 10 10 SF
0 setgray
84 366 M
( sys) s
24 355 M (14:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 355 M
(from) s
/F-gs-font 10 10 SF
0 setgray
72 355 M
( copy ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
108 355 M
(import) s
/F-gs-font 10 10 SF
0 setgray
144 355 M
( deepcopy) s
24 344 M (15:) s
24 333 M (16:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 333 M
(import) s
/F-gs-font 10 10 SF
0 setgray
84 333 M
( gpytorch) s
24 322 M (17:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 322 M
(import) s
/F-gs-font 10 10 SF
0 setgray
84 322 M
( numpy as np) s
24 311 M (18:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 311 M
(import) s
/F-gs-font 10 10 SF
0 setgray
84 311 M
( torch) s
24 300 M (19:) s
24 289 M (20:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 289 M
(from) s
/F-gs-font 10 10 SF
0 setgray
72 289 M
( .gp ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
102 289 M
(import) s
/F-gs-font 10 10 SF
0 setgray
138 289 M
( train_gp) s
24 278 M (21:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 278 M
(from) s
/F-gs-font 10 10 SF
0 setgray
72 278 M
( .turbo_1 ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
132 278 M
(import) s
/F-gs-font 10 10 SF
0 setgray
168 278 M
( Turbo1) s
24 267 M (22:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 267 M
(from) s
/F-gs-font 10 10 SF
0 setgray
72 267 M
( .utils ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
120 267 M
(import) s
/F-gs-font 10 10 SF
0 setgray
156 267 M
( from_unit_cube, latin_hypercube, to_unit_cube) s
24 256 M (23:) s
24 245 M (24:) s
24 234 M (25:) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
48 234 M
(class) s
/F-gs-font 10 10 SF
0 setgray
78 234 M
( TurboM\(Turbo1\):) s
24 223 M (26:) s
48 223 M
(    ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
72 223 M
("""The TuRBO-m algorithm.) s
/F-gs-font 10 10 SF
24 212 M (27:) s
/Courier-Bold 10 10 SUF
/F-gs-font 10 10 SF
24 201 M (28:) s
/Courier-Bold 10 10 SUF
48 201 M
(    Parameters) s
/F-gs-font 10 10 SF
24 190 M (29:) s
/Courier-Bold 10 10 SUF
48 190 M
(    ----------) s
/F-gs-font 10 10 SF
24 179 M (30:) s
/Courier-Bold 10 10 SUF
48 179 M
(    f : function handle) s
/F-gs-font 10 10 SF
24 168 M (31:) s
/Courier-Bold 10 10 SUF
48 168 M
(    lb : Lower variable bounds, numpy.array, shape \(d,\).) s
/F-gs-font 10 10 SF
24 157 M (32:) s
/Courier-Bold 10 10 SUF
48 157 M
(    ub : Upper variable bounds, numpy.array, shape \(d,\).) s
/F-gs-font 10 10 SF
24 146 M (33:) s
/Courier-Bold 10 10 SUF
48 146 M
(    n_init : Number of initial points *FOR EACH TRUST REGION* \(2*dim is recommended\), int.) s
/F-gs-font 10 10 SF
24 135 M (34:) s
/Courier-Bold 10 10 SUF
48 135 M
(    max_evals : Total evaluation budget, int.) s
/F-gs-font 10 10 SF
24 124 M (35:) s
/Courier-Bold 10 10 SUF
48 124 M
(    n_trust_regions : Number of trust regions) s
/F-gs-font 10 10 SF
24 113 M (36:) s
/Courier-Bold 10 10 SUF
48 113 M
(    batch_size : Number of points in each batch, int.) s
/F-gs-font 10 10 SF
24 102 M (37:) s
/Courier-Bold 10 10 SUF
48 102 M
(    verbose : If you want to print information about the optimization progress, bool.) s
/F-gs-font 10 10 SF
24 91 M (38:) s
/Courier-Bold 10 10 SUF
48 91 M
(    use_ard : If you want to use ARD for the GP kernel.) s
/F-gs-font 10 10 SF
24 80 M (39:) s
/Courier-Bold 10 10 SUF
48 80 M
(    max_cholesky_size : Largest number of training points where we use Cholesky, int) s
/F-gs-font 10 10 SF
24 69 M (40:) s
/Courier-Bold 10 10 SUF
48 69 M
(    n_training_steps : Number of training steps for learning the GP hypers, int) s
/F-gs-font 10 10 SF
24 58 M (41:) s
/Courier-Bold 10 10 SUF
48 58 M
(    min_cuda : We use float64 on the CPU if we have this or fewer datapoints) s
/F-gs-font 10 10 SF
24 47 M (42:) s
/Courier-Bold 10 10 SUF
48 47 M
(    device : Device to use for GP fitting \("cpu" or "cuda"\)) s
/F-gs-font 10 10 SF
24 36 M (43:) s
/Courier-Bold 10 10 SUF
48 36 M
(    dtype : Dtype to use for GP fitting \("float32" or "float64"\)) s
/F-gs-font 10 10 SF
24 25 M (44:) s
/Courier-Bold 10 10 SUF
/F-gs-font 10 10 SF
24 14 M (45:) s
/Courier-Bold 10 10 SUF
48 14 M
(    Example usage:) s
/F-gs-font 10 10 SF
24 3 M (46:) s
/Courier-Bold 10 10 SUF
48 3 M
(        turbo5 = TurboM\(f=f, lb=lb, ub=ub, n_init=n_init, max_evals=max_evals, n_trust_regions=5\)) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 2 def
/fname (turbo_m.py) def
/fdir (.) def
/ftail (turbo_m.py) def
/Courier-Bold 10 10 SUF
% User defined strings:
/pagenumstr (2) def
/moddatestr (12/20/19) def
/modtimestr (05:42:16) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
0.737255 0.560784 0.560784 setrgbcolor
/F-gs-font 10 10 SF
24 498 M (47:) s
/Courier-Bold 10 10 SUF
48 498 M
(        turbo5.optimize\(\)  # Run optimization) s
/F-gs-font 10 10 SF
24 487 M (48:) s
/Courier-Bold 10 10 SUF
48 487 M
(        X, fX = turbo5.X, turbo5.fX  # Evaluated points) s
/F-gs-font 10 10 SF
24 476 M (49:) s
/Courier-Bold 10 10 SUF
48 476 M
(    """) s
/F-gs-font 10 10 SF
0 setgray
24 465 M (50:) s
24 454 M (51:) s
48 454 M
(    ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
72 454 M
(def) s
/F-gs-font 10 10 SF
0 setgray
90 454 M
( ) s
/Courier-Bold 10 10 SUF
0 0 1 setrgbcolor
96 454 M
(__init__) s
/F-gs-font 10 10 SF
0 setgray
144 454 M
(\() s
24 443 M (52:) s
48 443 M
(        self,) s
24 432 M (53:) s
48 432 M
(        f,) s
24 421 M (54:) s
48 421 M
(        lb,) s
24 410 M (55:) s
48 410 M
(        ub,) s
24 399 M (56:) s
48 399 M
(        n_init,) s
24 388 M (57:) s
48 388 M
(        max_evals,) s
24 377 M (58:) s
48 377 M
(        n_trust_regions,) s
24 366 M (59:) s
48 366 M
(        batch_size=1,) s
24 355 M (60:) s
48 355 M
(        verbose=True,) s
24 344 M (61:) s
48 344 M
(        use_ard=True,) s
24 333 M (62:) s
48 333 M
(        max_cholesky_size=2000,) s
24 322 M (63:) s
48 322 M
(        n_training_steps=50,) s
24 311 M (64:) s
48 311 M
(        min_cuda=1024,) s
24 300 M (65:) s
48 300 M
(        device=) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
138 300 M
("cpu") s
/F-gs-font 10 10 SF
0 setgray
168 300 M
(,) s
24 289 M (66:) s
48 289 M
(        dtype=) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
132 289 M
("float64") s
/F-gs-font 10 10 SF
0 setgray
186 289 M
(,) s
24 278 M (67:) s
48 278 M
(    \):) s
24 267 M (68:) s
48 267 M
(        self.n_trust_regions = n_trust_regions) s
24 256 M (69:) s
48 256 M
(        super\(\).__init__\() s
24 245 M (70:) s
48 245 M
(            f=f,) s
24 234 M (71:) s
48 234 M
(            lb=lb,) s
24 223 M (72:) s
48 223 M
(            ub=ub,) s
24 212 M (73:) s
48 212 M
(            n_init=n_init,) s
24 201 M (74:) s
48 201 M
(            max_evals=max_evals,) s
24 190 M (75:) s
48 190 M
(            batch_size=batch_size,) s
24 179 M (76:) s
48 179 M
(            verbose=verbose,) s
24 168 M (77:) s
48 168 M
(            use_ard=use_ard,) s
24 157 M (78:) s
48 157 M
(            max_cholesky_size=max_cholesky_size,) s
24 146 M (79:) s
48 146 M
(            n_training_steps=n_training_steps,) s
24 135 M (80:) s
48 135 M
(            min_cuda=min_cuda,) s
24 124 M (81:) s
48 124 M
(            device=device,) s
24 113 M (82:) s
48 113 M
(            dtype=dtype,) s
24 102 M (83:) s
48 102 M
(        \)) s
24 91 M (84:) s
24 80 M (85:) s
48 80 M
(        self.succtol = 3) s
24 69 M (86:) s
48 69 M
(        self.failtol = max\(5, self.dim\)) s
24 58 M (87:) s
24 47 M (88:) s
48 47 M
(        ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
96 47 M
(# Very basic input checks) s
/F-gs-font 10 10 SF
24 36 M (89:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 36 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 36 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
132 36 M
( n_trust_regions > 1 ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
258 36 M
(and) s
/F-gs-font 10 10 SF
0 setgray
276 36 M
( isinstance\(max_evals, int\)) s
24 25 M (90:) s
48 25 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 25 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
132 25 M
( max_evals > n_trust_regions * n_init, ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
366 25 M
("Not enough trust regions to do initial evaluations") s
/F-gs-font 10 10 SF
0 setgray
24 14 M (91:) s
48 14 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 14 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
132 14 M
( max_evals > batch_size, ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
282 14 M
("Not enough evaluations to do a single batch") s
/F-gs-font 10 10 SF
0 setgray
24 3 M (92:) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 3 def
/fname (turbo_m.py) def
/fdir (.) def
/ftail (turbo_m.py) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (12/20/19) def
/modtimestr (05:42:16) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
24 498 M (93:) s
48 498 M
(        ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
96 498 M
(# Remember the hypers for trust regions we don't sample from) s
/F-gs-font 10 10 SF
24 487 M (94:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 487 M
(        self.hypers = [{} ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
204 487 M
(for) s
/F-gs-font 10 10 SF
0 setgray
222 487 M
( _ ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
240 487 M
(in) s
/F-gs-font 10 10 SF
0 setgray
252 487 M
( range\(self.n_trust_regions\)]) s
24 476 M (95:) s
24 465 M (96:) s
48 465 M
(        ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
96 465 M
(# Initialize parameters) s
/F-gs-font 10 10 SF
24 454 M (97:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 454 M
(        self._restart\(\)) s
24 443 M (98:) s
24 432 M (99:) s
48 432 M
(    ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
72 432 M
(def) s
/F-gs-font 10 10 SF
0 setgray
90 432 M
( ) s
/Courier-Bold 10 10 SUF
0 0 1 setrgbcolor
96 432 M
(_restart) s
/F-gs-font 10 10 SF
0 setgray
144 432 M
(\(self\):) s
18 421 M (100:) s
48 421 M
(        self._idx = np.zeros\(\(0, 1\), dtype=int\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
342 421 M
(# Track what trust region proposed what using an index vector) s
/F-gs-font 10 10 SF
18 410 M (101:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 410 M
(        self.failcount = np.zeros\(self.n_trust_regions, dtype=int\)) s
18 399 M (102:) s
48 399 M
(        self.succcount = np.zeros\(self.n_trust_regions, dtype=int\)) s
18 388 M (103:) s
48 388 M
(        self.length = self.length_init * np.ones\(self.n_trust_regions\)) s
18 377 M (104:) s
18 366 M (105:) s
48 366 M
(    ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
72 366 M
(def) s
/F-gs-font 10 10 SF
0 setgray
90 366 M
( ) s
/Courier-Bold 10 10 SUF
0 0 1 setrgbcolor
96 366 M
(_adjust_length) s
/F-gs-font 10 10 SF
0 setgray
180 366 M
(\(self, fX_next, i\):) s
18 355 M (106:) s
48 355 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 355 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
132 355 M
( i >= 0 ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
180 355 M
(and) s
/F-gs-font 10 10 SF
0 setgray
198 355 M
( i <= self.n_trust_regions - 1) s
18 344 M (107:) s
18 333 M (108:) s
48 333 M
(        fX_min = self.fX[self._idx[:, 0] == i, 0].min\(\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
390 333 M
(# Target value) s
/F-gs-font 10 10 SF
18 322 M (109:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 322 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 322 M
(if) s
/F-gs-font 10 10 SF
0 setgray
108 322 M
( fX_next.min\(\) < fX_min - 1e-3 * math.fabs\(fX_min\):) s
18 311 M (110:) s
48 311 M
(            self.succcount[i] += 1) s
18 300 M (111:) s
48 300 M
(            self.failcount[i] = 0) s
18 289 M (112:) s
48 289 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 289 M
(else) s
/F-gs-font 10 10 SF
0 setgray
120 289 M
(:) s
18 278 M (113:) s
48 278 M
(            self.succcount[i] = 0) s
18 267 M (114:) s
48 267 M
(            self.failcount[i] += len\(fX_next\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
330 267 M
(# NOTE: Add size of the batch for this TR) s
/F-gs-font 10 10 SF
18 256 M (115:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
18 245 M (116:) s
48 245 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 245 M
(if) s
/F-gs-font 10 10 SF
0 setgray
108 245 M
( self.succcount[i] == self.succtol:  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
330 245 M
(# Expand trust region) s
/F-gs-font 10 10 SF
18 234 M (117:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 234 M
(            self.length[i] = min\([2.0 * self.length[i], self.length_max]\)) s
18 223 M (118:) s
48 223 M
(            self.succcount[i] = 0) s
18 212 M (119:) s
48 212 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 212 M
(elif) s
/F-gs-font 10 10 SF
0 setgray
120 212 M
( self.failcount[i] >= self.failtol:  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
342 212 M
(# Shrink trust region \(we may have exceeded the failtol\)) s
/F-gs-font 10 10 SF
18 201 M (120:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 201 M
(            self.length[i] /= 2.0) s
18 190 M (121:) s
48 190 M
(            self.failcount[i] = 0) s
18 179 M (122:) s
18 168 M (123:) s
48 168 M
(    ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
72 168 M
(def) s
/F-gs-font 10 10 SF
0 setgray
90 168 M
( ) s
/Courier-Bold 10 10 SUF
0 0 1 setrgbcolor
96 168 M
(_select_candidates) s
/F-gs-font 10 10 SF
0 setgray
204 168 M
(\(self, X_cand, y_cand\):) s
18 157 M (124:) s
48 157 M
(        ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
96 157 M
("""Select candidates from samples from all trust regions.""") s
/F-gs-font 10 10 SF
0 setgray
18 146 M (125:) s
48 146 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 146 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
132 146 M
( X_cand.shape == \(self.n_trust_regions, self.n_cand, self.dim\)) s
18 135 M (126:) s
48 135 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 135 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
132 135 M
( y_cand.shape == \(self.n_trust_regions, self.n_cand, self.batch_size\)) s
18 124 M (127:) s
48 124 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 124 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
132 124 M
( X_cand.min\(\) >= 0.0 ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
258 124 M
(and) s
/F-gs-font 10 10 SF
0 setgray
276 124 M
( X_cand.max\(\) <= 1.0 ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
402 124 M
(and) s
/F-gs-font 10 10 SF
0 setgray
420 124 M
( np.all\(np.isfinite\(y_cand\)\)) s
18 113 M (128:) s
18 102 M (129:) s
48 102 M
(        X_next = np.zeros\(\(self.batch_size, self.dim\)\)) s
18 91 M (130:) s
48 91 M
(        idx_next = np.zeros\(\(self.batch_size, 1\), dtype=int\)) s
18 80 M (131:) s
48 80 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 80 M
(for) s
/F-gs-font 10 10 SF
0 setgray
114 80 M
( k ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
132 80 M
(in) s
/F-gs-font 10 10 SF
0 setgray
144 80 M
( range\(self.batch_size\):) s
18 69 M (132:) s
48 69 M
(            i, j = np.unravel_index\(np.argmin\(y_cand[:, :, k]\), \(self.n_trust_regions, self.n_cand\)\)) s
18 58 M (133:) s
48 58 M
(            ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
120 58 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
156 58 M
( y_cand[:, :, k].min\(\) == y_cand[i, j, k]) s
18 47 M (134:) s
48 47 M
(            X_next[k, :] = deepcopy\(X_cand[i, j, :]\)) s
18 36 M (135:) s
48 36 M
(            idx_next[k, 0] = i) s
18 25 M (136:) s
48 25 M
(            ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
120 25 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
156 25 M
( np.isfinite\(y_cand[i, j, k]\)  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
342 25 M
(# Just to make sure we never select nan or inf) s
/F-gs-font 10 10 SF
18 14 M (137:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
18 3 M (138:) s
48 3 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 3 M
(# Make sure we never pick this point again) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 4 def
/fname (turbo_m.py) def
/fdir (.) def
/ftail (turbo_m.py) def
/Courier-Oblique 10 10 SUF
% User defined strings:
/pagenumstr (4) def
/moddatestr (12/20/19) def
/modtimestr (05:42:16) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
0.698039 0.133333 0.133333 setrgbcolor
/F-gs-font 10 10 SF
18 498 M (139:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 498 M
(            y_cand[i, j, :] = np.inf) s
18 487 M (140:) s
18 476 M (141:) s
48 476 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 476 M
(return) s
/F-gs-font 10 10 SF
0 setgray
132 476 M
( X_next, idx_next) s
18 465 M (142:) s
18 454 M (143:) s
48 454 M
(    ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
72 454 M
(def) s
/F-gs-font 10 10 SF
0 setgray
90 454 M
( ) s
/Courier-Bold 10 10 SUF
0 0 1 setrgbcolor
96 454 M
(optimize) s
/F-gs-font 10 10 SF
0 setgray
144 454 M
(\(self\):) s
18 443 M (144:) s
48 443 M
(        ) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
96 443 M
("""Run the full optimization process.""") s
/F-gs-font 10 10 SF
0 setgray
18 432 M (145:) s
48 432 M
(        ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
96 432 M
(# Create initial points for each TR) s
/F-gs-font 10 10 SF
18 421 M (146:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 421 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 421 M
(for) s
/F-gs-font 10 10 SF
0 setgray
114 421 M
( i ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
132 421 M
(in) s
/F-gs-font 10 10 SF
0 setgray
144 421 M
( range\(self.n_trust_regions\):) s
18 410 M (147:) s
48 410 M
(            X_init = latin_hypercube\(self.n_init, self.dim\)) s
18 399 M (148:) s
48 399 M
(            X_init = from_unit_cube\(X_init, self.lb, self.ub\)) s
18 388 M (149:) s
48 388 M
(            fX_init = np.array\([[self.f\(x\)] ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
312 388 M
(for) s
/F-gs-font 10 10 SF
0 setgray
330 388 M
( x ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
348 388 M
(in) s
/F-gs-font 10 10 SF
0 setgray
360 388 M
( X_init]\)) s
18 377 M (150:) s
18 366 M (151:) s
48 366 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 366 M
(# Update budget and set as initial data for this TR) s
/F-gs-font 10 10 SF
18 355 M (152:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 355 M
(            self.X = np.vstack\(\(self.X, X_init\)\)) s
18 344 M (153:) s
48 344 M
(            self.fX = np.vstack\(\(self.fX, fX_init\)\)) s
18 333 M (154:) s
48 333 M
(            self._idx = np.vstack\(\(self._idx, i * np.ones\(\(self.n_init, 1\), dtype=int\)\)\)) s
18 322 M (155:) s
48 322 M
(            self.n_evals += self.n_init) s
18 311 M (156:) s
18 300 M (157:) s
48 300 M
(            ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
120 300 M
(if) s
/F-gs-font 10 10 SF
0 setgray
132 300 M
( self.verbose:) s
18 289 M (158:) s
48 289 M
(                fbest = fX_init.min\(\)) s
18 278 M (159:) s
48 278 M
(                ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
144 278 M
(print) s
/F-gs-font 10 10 SF
0 setgray
174 278 M
(\(f) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
186 278 M
("TR-{i} starting from: {fbest:.4}") s
/F-gs-font 10 10 SF
0 setgray
390 278 M
(\)) s
18 267 M (160:) s
48 267 M
(                sys.stdout.flush\(\)) s
18 256 M (161:) s
18 245 M (162:) s
48 245 M
(        ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
96 245 M
(# Thompson sample to get next suggestions) s
/F-gs-font 10 10 SF
18 234 M (163:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 234 M
(        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
96 234 M
(while) s
/F-gs-font 10 10 SF
0 setgray
126 234 M
( self.n_evals < self.max_evals:) s
18 223 M (164:) s
18 212 M (165:) s
48 212 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 212 M
(# Generate candidates from each TR) s
/F-gs-font 10 10 SF
18 201 M (166:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 201 M
(            X_cand = np.zeros\(\(self.n_trust_regions, self.n_cand, self.dim\)\)) s
18 190 M (167:) s
48 190 M
(            y_cand = np.inf * np.ones\(\(self.n_trust_regions, self.n_cand, self.batch_size\)\)) s
18 179 M (168:) s
48 179 M
(            ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
120 179 M
(for) s
/F-gs-font 10 10 SF
0 setgray
138 179 M
( i ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
156 179 M
(in) s
/F-gs-font 10 10 SF
0 setgray
168 179 M
( range\(self.n_trust_regions\):) s
18 168 M (169:) s
48 168 M
(                idx = np.where\(self._idx == i\)[0]  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
354 168 M
(# Extract all "active" indices) s
/F-gs-font 10 10 SF
18 157 M (170:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
18 146 M (171:) s
48 146 M
(                ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
144 146 M
(# Get the points, values the active values) s
/F-gs-font 10 10 SF
18 135 M (172:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 135 M
(                X = deepcopy\(self.X[idx, :]\)) s
18 124 M (173:) s
48 124 M
(                X = to_unit_cube\(X, self.lb, self.ub\)) s
18 113 M (174:) s
18 102 M (175:) s
48 102 M
(                ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
144 102 M
(# Get the values from the standardized data) s
/F-gs-font 10 10 SF
18 91 M (176:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 91 M
(                fX = deepcopy\(self.fX[idx, 0].ravel\(\)\)) s
18 80 M (177:) s
18 69 M (178:) s
48 69 M
(                ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
144 69 M
(# Don't retrain the model if the training data hasn't changed) s
/F-gs-font 10 10 SF
18 58 M (179:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 58 M
(                n_training_steps = 0 ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
270 58 M
(if) s
/F-gs-font 10 10 SF
0 setgray
282 58 M
( self.hypers[i] ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
378 58 M
(else) s
/F-gs-font 10 10 SF
0 setgray
402 58 M
( self.n_training_steps) s
18 47 M (180:) s
18 36 M (181:) s
48 36 M
(                ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
144 36 M
(# Create new candidates) s
/F-gs-font 10 10 SF
18 25 M (182:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 25 M
(                X_cand[i, :, :], y_cand[i, :, :], self.hypers[i] = self._create_candidates\() s
18 14 M (183:) s
48 14 M
(                    X, fX, length=self.length[i], n_training_steps=n_training_steps, hypers=self.hypers[i]) s
18 3 M (184:) s
48 3 M
(                \)) s
_R
S
%%Page: (5) 5
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 5 def
/fname (turbo_m.py) def
/fdir (.) def
/ftail (turbo_m.py) def
% User defined strings:
/pagenumstr (5) def
/moddatestr (12/20/19) def
/modtimestr (05:42:16) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
18 498 M (185:) s
18 487 M (186:) s
48 487 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 487 M
(# Select the next candidates) s
/F-gs-font 10 10 SF
18 476 M (187:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 476 M
(            X_next, idx_next = self._select_candidates\(X_cand, y_cand\)) s
18 465 M (188:) s
48 465 M
(            ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
120 465 M
(assert) s
/F-gs-font 10 10 SF
0 setgray
156 465 M
( X_next.min\(\) >= 0.0 ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
282 465 M
(and) s
/F-gs-font 10 10 SF
0 setgray
300 465 M
( X_next.max\(\) <= 1.0) s
18 454 M (189:) s
18 443 M (190:) s
48 443 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 443 M
(# Undo the warping) s
/F-gs-font 10 10 SF
18 432 M (191:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 432 M
(            X_next = from_unit_cube\(X_next, self.lb, self.ub\)) s
18 421 M (192:) s
18 410 M (193:) s
48 410 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 410 M
(# Evaluate batch) s
/F-gs-font 10 10 SF
18 399 M (194:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 399 M
(            fX_next = np.array\([[self.f\(x\)] ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
312 399 M
(for) s
/F-gs-font 10 10 SF
0 setgray
330 399 M
( x ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
348 399 M
(in) s
/F-gs-font 10 10 SF
0 setgray
360 399 M
( X_next]\)) s
18 388 M (195:) s
18 377 M (196:) s
48 377 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 377 M
(# Update trust regions) s
/F-gs-font 10 10 SF
18 366 M (197:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 366 M
(            ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
120 366 M
(for) s
/F-gs-font 10 10 SF
0 setgray
138 366 M
( i ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
156 366 M
(in) s
/F-gs-font 10 10 SF
0 setgray
168 366 M
( range\(self.n_trust_regions\):) s
18 355 M (198:) s
48 355 M
(                idx_i = np.where\(idx_next == i\)[0]) s
18 344 M (199:) s
48 344 M
(                ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
144 344 M
(if) s
/F-gs-font 10 10 SF
0 setgray
156 344 M
( len\(idx_i\) > 0:) s
18 333 M (200:) s
48 333 M
(                    self.hypers[i] = {}  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
294 333 M
(# Remove model hypers) s
/F-gs-font 10 10 SF
18 322 M (201:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 322 M
(                    fX_i = fX_next[idx_i]) s
18 311 M (202:) s
18 300 M (203:) s
48 300 M
(                    ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
168 300 M
(if) s
/F-gs-font 10 10 SF
0 setgray
180 300 M
( self.verbose ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
264 300 M
(and) s
/F-gs-font 10 10 SF
0 setgray
282 300 M
( fX_i.min\(\) < self.fX.min\(\) - 1e-3 * math.fabs\(self.fX.min\(\)\):) s
18 289 M (204:) s
48 289 M
(                        n_evals, fbest = self.n_evals, fX_i.min\(\)) s
18 278 M (205:) s
48 278 M
(                        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
192 278 M
(print) s
/F-gs-font 10 10 SF
0 setgray
222 278 M
(\(f) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
234 278 M
("{n_evals}\) New best @ TR-{i}: {fbest:.4}") s
/F-gs-font 10 10 SF
0 setgray
486 278 M
(\)) s
18 267 M (206:) s
48 267 M
(                        sys.stdout.flush\(\)) s
18 256 M (207:) s
48 256 M
(                    self._adjust_length\(fX_i, i\)) s
18 245 M (208:) s
18 234 M (209:) s
48 234 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 234 M
(# Update budget and append data) s
/F-gs-font 10 10 SF
18 223 M (210:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 223 M
(            self.n_evals += self.batch_size) s
18 212 M (211:) s
48 212 M
(            self.X = np.vstack\(\(self.X, deepcopy\(X_next\)\)\)) s
18 201 M (212:) s
48 201 M
(            self.fX = np.vstack\(\(self.fX, deepcopy\(fX_next\)\)\)) s
18 190 M (213:) s
48 190 M
(            self._idx = np.vstack\(\(self._idx, deepcopy\(idx_next\)\)\)) s
18 179 M (214:) s
18 168 M (215:) s
48 168 M
(            ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
120 168 M
(# Check if any TR needs to be restarted) s
/F-gs-font 10 10 SF
18 157 M (216:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 157 M
(            ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
120 157 M
(for) s
/F-gs-font 10 10 SF
0 setgray
138 157 M
( i ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
156 157 M
(in) s
/F-gs-font 10 10 SF
0 setgray
168 157 M
( range\(self.n_trust_regions\):) s
18 146 M (217:) s
48 146 M
(                ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
144 146 M
(if) s
/F-gs-font 10 10 SF
0 setgray
156 146 M
( self.length[i] < self.length_min:  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
372 146 M
(# Restart trust region if converged) s
/F-gs-font 10 10 SF
18 135 M (218:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 135 M
(                    idx_i = self._idx[:, 0] == i) s
18 124 M (219:) s
18 113 M (220:) s
48 113 M
(                    ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
168 113 M
(if) s
/F-gs-font 10 10 SF
0 setgray
180 113 M
( self.verbose:) s
18 102 M (221:) s
48 102 M
(                        n_evals, fbest = self.n_evals, self.fX[idx_i, 0].min\(\)) s
18 91 M (222:) s
48 91 M
(                        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
192 91 M
(print) s
/F-gs-font 10 10 SF
0 setgray
222 91 M
(\(f) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
234 91 M
("{n_evals}\) TR-{i} converged to: : {fbest:.4}") s
/F-gs-font 10 10 SF
0 setgray
510 91 M
(\)) s
18 80 M (223:) s
48 80 M
(                        sys.stdout.flush\(\)) s
18 69 M (224:) s
18 58 M (225:) s
48 58 M
(                    ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
168 58 M
(# Reset length and counters, remove old data from trust region) s
/F-gs-font 10 10 SF
18 47 M (226:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 47 M
(                    self.length[i] = self.length_init) s
18 36 M (227:) s
48 36 M
(                    self.succcount[i] = 0) s
18 25 M (228:) s
48 25 M
(                    self.failcount[i] = 0) s
18 14 M (229:) s
48 14 M
(                    self._idx[idx_i, 0] = -1  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
324 14 M
(# Remove points from trust region) s
/F-gs-font 10 10 SF
18 3 M (230:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 3 M
(                    self.hypers[i] = {}  ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
294 3 M
(# Remove model hypers) s
_R
S
%%Page: (6) 6
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 6 def
/fname (turbo_m.py) def
/fdir (.) def
/ftail (turbo_m.py) def
/Courier-Oblique 10 10 SUF
% User defined strings:
/pagenumstr (6) def
/moddatestr (12/20/19) def
/modtimestr (05:42:16) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
0.698039 0.133333 0.133333 setrgbcolor
/F-gs-font 10 10 SF
18 498 M (231:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
18 487 M (232:) s
48 487 M
(                    ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
168 487 M
(# Create a new initial design) s
/F-gs-font 10 10 SF
18 476 M (233:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 476 M
(                    X_init = latin_hypercube\(self.n_init, self.dim\)) s
18 465 M (234:) s
48 465 M
(                    X_init = from_unit_cube\(X_init, self.lb, self.ub\)) s
18 454 M (235:) s
48 454 M
(                    fX_init = np.array\([[self.f\(x\)] ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
360 454 M
(for) s
/F-gs-font 10 10 SF
0 setgray
378 454 M
( x ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
396 454 M
(in) s
/F-gs-font 10 10 SF
0 setgray
408 454 M
( X_init]\)) s
18 443 M (236:) s
18 432 M (237:) s
48 432 M
(                    ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
168 432 M
(# Print progress) s
/F-gs-font 10 10 SF
18 421 M (238:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 421 M
(                    ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
168 421 M
(if) s
/F-gs-font 10 10 SF
0 setgray
180 421 M
( self.verbose:) s
18 410 M (239:) s
48 410 M
(                        n_evals, fbest = self.n_evals, fX_init.min\(\)) s
18 399 M (240:) s
48 399 M
(                        ) s
/Courier-Bold 10 10 SUF
0.627451 0.12549 0.941176 setrgbcolor
192 399 M
(print) s
/F-gs-font 10 10 SF
0 setgray
222 399 M
(\(f) s
/Courier-Bold 10 10 SUF
0.737255 0.560784 0.560784 setrgbcolor
234 399 M
("{n_evals}\) TR-{i} is restarting from: : {fbest:.4}") s
/F-gs-font 10 10 SF
0 setgray
546 399 M
(\)) s
18 388 M (241:) s
48 388 M
(                        sys.stdout.flush\(\)) s
18 377 M (242:) s
18 366 M (243:) s
48 366 M
(                    ) s
/Courier-Oblique 10 10 SUF
0.698039 0.133333 0.133333 setrgbcolor
168 366 M
(# Append data to local history) s
/F-gs-font 10 10 SF
18 355 M (244:) s
/Courier-Oblique 10 10 SUF
/F-gs-font 10 10 SF
0 setgray
48 355 M
(                    self.X = np.vstack\(\(self.X, X_init\)\)) s
18 344 M (245:) s
48 344 M
(                    self.fX = np.vstack\(\(self.fX, fX_init\)\)) s
18 333 M (246:) s
48 333 M
(                    self._idx = np.vstack\(\(self._idx, i * np.ones\(\(self.n_init, 1\), dtype=int\)\)\)) s
18 322 M (247:) s
48 322 M
(                    self.n_evals += self.n_init) s
_R
S
%%Trailer
%%Pages: 6
%%DocumentNeededResources: font Times-Roman Courier-Oblique Courier-Bold 
%%+ font Courier Times-Bold 
%%EOF
